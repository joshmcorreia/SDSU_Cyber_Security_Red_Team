from abc import ABC, abstractmethod

class UnsupportedException(Exception):
	pass

class PatchedException(Exception):
	pass

class IncorrectPatchException(Exception):
	"""
	Raised when a student incorrectly patches a vulnerability.
	"""
	pass

class Exploit(ABC):
	"""
	Abstract Base Class for exploits

	Each exploit extends this abstract base class
	"""
	def __init__(self, ip_address, parsed_config):
		self.ip_address = ip_address
		self.parsed_config = parsed_config

	@abstractmethod
	def test_if_vulnerable(self):
		pass

	@abstractmethod
	def run_hellevator(self):
		pass

	@abstractmethod
	def run_command(self, command):
		"""
		Attempts to run the specified command on the server.
		The command will be run in whatever context the exploit allows and does not include privilege escalation.

		Warning: By design, there is no exception handling in this function!
		"""
		pass
